name: release

on:
  release:
    types: [published]

env:
  DOCKER_IMAGE: docker.io/mrazjava/booklink-frontend-vue
  ARTIFACT_DIR: release_build

jobs:
  build:
    runs-on: ubuntu-latest
    name: Test and Build
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: setting up Node build environment
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: building vue.js frontend
        run: |
          npm install
          yarn lint
          yarn build
          tar -cvf dist.tar dist/
      - name: upload executable artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: dist.tar
      - name: upload docker entrypoint artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: entrypoint.sh
      - name: upload dockerfile artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: Dockerfile
      - name: upload aws deployment artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_DIR }}
          path: .aws/pre-release.json
  publish:
    runs-on: ubuntu-latest
    name: Package and Release
    needs: build
    steps:
      - name: download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_DIR }}
      - name: extract git-tagged version
        id: extract-tagged-version
        run: |
          echo "::set-env name=DOCKER_IMG_TAG::${GITHUB_REF/refs\/tags\//}"
      - name: assemble docker image
        run: |
          tar -xvf $ARTIFACT_DIR/dist.tar -C .
          mv $ARTIFACT_DIR/Dockerfile .
          mv $ARTIFACT_DIR/entrypoint.sh .
          docker build -t $DOCKER_IMAGE:$DOCKER_IMG_TAG .
      - name: push image to dockerhub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_LOGIN }} -p ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          docker push $DOCKER_IMAGE:$DOCKER_IMG_TAG
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.1.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.0.3
      - name: push image to Amazon ECR
        id: push-image-to-aws
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: booklink-frontend-vue
        run: |
          # Push image to ECR so that it can be deployed to ECS.
          docker tag $DOCKER_IMAGE:$DOCKER_IMG_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_IMG_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DOCKER_IMG_TAG